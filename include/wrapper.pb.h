/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_WRAPPER_PB_H_INCLUDED
#define PB_WRAPPER_PB_H_INCLUDED
#include <pb.h>
#include "motor.pb.h"
#include "sensor.pb.h"
#include "error.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _WrappedRequest {
    pb_size_t which_msg;
    union {
        SensorRequest sensorRequest;
        MotorRequest motorRequest;
    } msg;
} WrappedRequest;

typedef struct _WrappedResponse {
    bool status;
    pb_size_t which_msg;
    union {
        SensorResponse sensorResponse;
        MotorResponse motorResponse;
        ErrorResponse errorResponse;
    } msg;
} WrappedResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WrappedRequest_init_default              {0, {SensorRequest_init_default}}
#define WrappedResponse_init_default             {0, 0, {SensorResponse_init_default}}
#define WrappedRequest_init_zero                 {0, {SensorRequest_init_zero}}
#define WrappedResponse_init_zero                {0, 0, {SensorResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define WrappedRequest_sensorRequest_tag         1
#define WrappedRequest_motorRequest_tag          2
#define WrappedResponse_status_tag               1
#define WrappedResponse_sensorResponse_tag       2
#define WrappedResponse_motorResponse_tag        3
#define WrappedResponse_errorResponse_tag        4

/* Struct field encoding specification for nanopb */
#define WrappedRequest_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,sensorRequest,msg.sensorRequest),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,motorRequest,msg.motorRequest),   2)
#define WrappedRequest_CALLBACK NULL
#define WrappedRequest_DEFAULT NULL
#define WrappedRequest_msg_sensorRequest_MSGTYPE SensorRequest
#define WrappedRequest_msg_motorRequest_MSGTYPE MotorRequest

#define WrappedResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     status,            1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,sensorResponse,msg.sensorResponse),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,motorResponse,msg.motorResponse),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,errorResponse,msg.errorResponse),   4)
#define WrappedResponse_CALLBACK NULL
#define WrappedResponse_DEFAULT NULL
#define WrappedResponse_msg_sensorResponse_MSGTYPE SensorResponse
#define WrappedResponse_msg_motorResponse_MSGTYPE MotorResponse
#define WrappedResponse_msg_errorResponse_MSGTYPE ErrorResponse

extern const pb_msgdesc_t WrappedRequest_msg;
extern const pb_msgdesc_t WrappedResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WrappedRequest_fields &WrappedRequest_msg
#define WrappedResponse_fields &WrappedResponse_msg

/* Maximum encoded size of messages (where known) */
#if defined(ErrorResponse_size)
union WrappedResponse_msg_size_union {char f4[(6 + ErrorResponse_size)]; char f0[11];};
#endif
#define WrappedRequest_size                      24
#if defined(ErrorResponse_size)
#define WrappedResponse_size                     (2 + sizeof(union WrappedResponse_msg_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif

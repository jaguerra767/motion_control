/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SENSOR_PB_H_INCLUDED
#define PB_SENSOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _SensorType {
    SensorType_NoSensor = 0,
    SensorType_Temperature = 1,
    SensorType_Battery = 2,
    SensorType_Counter = 3
} SensorType;

/* Struct definitions */
typedef struct _SensorRequest {
    SensorType sensor;
} SensorRequest;

typedef struct _SensorResponse {
    float value;
} SensorResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _SensorType_MIN SensorType_NoSensor
#define _SensorType_MAX SensorType_Counter
#define _SensorType_ARRAYSIZE ((SensorType)(SensorType_Counter+1))

#define SensorRequest_sensor_ENUMTYPE SensorType



/* Initializer values for message structs */
#define SensorRequest_init_default               {_SensorType_MIN}
#define SensorResponse_init_default              {0}
#define SensorRequest_init_zero                  {_SensorType_MIN}
#define SensorResponse_init_zero                 {0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorRequest_sensor_tag                 1
#define SensorResponse_value_tag                 1

/* Struct field encoding specification for nanopb */
#define SensorRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sensor,            1)
#define SensorRequest_CALLBACK NULL
#define SensorRequest_DEFAULT NULL

#define SensorResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    value,             1)
#define SensorResponse_CALLBACK NULL
#define SensorResponse_DEFAULT NULL

extern const pb_msgdesc_t SensorRequest_msg;
extern const pb_msgdesc_t SensorResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorRequest_fields &SensorRequest_msg
#define SensorResponse_fields &SensorResponse_msg

/* Maximum encoded size of messages (where known) */
#define SensorRequest_size                       2
#define SensorResponse_size                      5

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
